# -*- coding: utf-8 -*-
"""SPARKS_Task_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J1j0u7UqbIe0NZ1tMx80xi-gTrvnKfOe
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
data=pd.read_csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
print("Data imported successfully")
print("DATA:")
data

data.plot(x='Hours', y='Scores', style='o')
plt.title('Graph\nHours vs Percentage')  

plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')
  
plt.show()

x=data.iloc[:,:-1].values
y=data.iloc[:,1].values
print(x)
print(y)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,test_size=0.2,random_state=0)

from sklearn.linear_model import LinearRegression
regressor= LinearRegression()
regressor.fit(x_train, y_train)
y_pred= regressor.predict(x_test)

print("Training complete.")

line = regressor.coef_*x+regressor.intercept_
plt.scatter(x, y)
plt.plot(x, line);
plt.show()

print('Test Score')
print(regressor.score(x_test, y_test))
print('Training Score')
print(regressor.score(x_train, y_train))

df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
df

""" **OUTPUT**"""

print('Predicted score if a student studies for 9.25 hrs/ day is:', regressor.predict([[9.25]])[0])

from sklearn import metrics as m
print("Mean Squared Error is:",m.mean_squared_error(y_test, y_pred))
print("Mean Absolute Error is:",m.mean_absolute_error(y_test, y_pred))

